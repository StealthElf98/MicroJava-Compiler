INFO  17:55:20,105 - Compiling source file: C:\Users\Sergej\Desktop\pp2k23\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  17:55:20,165 - #2 program
INFO  17:55:20,166 - #41 MJProgram
INFO  17:55:20,167 - #17 namespace
INFO  17:55:20,167 - #41 sizes
INFO  17:55:20,167 - #3 {
INFO  17:55:20,167 - #18 const
INFO  17:55:20,168 - #41 int
INFO  17:55:20,168 - #41 tableSize
INFO  17:55:20,169 - #22 =
INFO  17:55:20,169 - #42 10
INFO  17:55:20,169 - #5 ;
INFO  17:55:20,170 - #3 {
INFO  17:55:20,172 - #15 void
INFO  17:55:20,173 - #41 setfactor
INFO  17:55:20,176 - #6 (
INFO  17:55:20,176 - #41 int
INFO  17:55:20,177 - #41 factor
INFO  17:55:20,177 - #7 )
INFO  17:55:20,177 - #3 {
INFO  17:55:20,178 - #41 this
INFO  17:55:20,179 - #21 .
INFO  17:55:20,180 - #41 factor
INFO  17:55:20,180 - #22 =
INFO  17:55:20,181 - #41 factor
INFO  17:55:20,182 - #5 ;
INFO  17:55:20,183 - #4 }
INFO  17:55:20,184 - #15 void
INFO  17:55:20,184 - #41 putp
INFO  17:55:20,185 - #6 (
INFO  17:55:20,185 - #41 int
INFO  17:55:20,185 - #41 a
INFO  17:55:20,185 - #10 ,
INFO  17:55:20,185 - #41 int
INFO  17:55:20,185 - #41 idx
INFO  17:55:20,186 - #7 )
INFO  17:55:20,186 - #3 {
INFO  17:55:20,187 - #41 this
INFO  17:55:20,187 - #21 .
INFO  17:55:20,187 - #41 pos
INFO  17:55:20,187 - #8 [
INFO  17:55:20,187 - #41 idx
INFO  17:55:20,188 - #9 ]
INFO  17:55:20,188 - #22 =
INFO  17:55:20,188 - #41 a
INFO  17:55:20,188 - #5 ;
INFO  17:55:20,189 - #4 }
INFO  17:55:20,189 - #4 }
INFO  17:55:20,189 - #4 }
INFO  17:55:20,189 - #18 const
INFO  17:55:20,190 - #41 int
INFO  17:55:20,190 - #41 z
INFO  17:55:20,190 - #22 =
INFO  17:55:20,190 - #42 4
INFO  17:55:20,190 - #10 ,
INFO  17:55:20,191 - #41 u
INFO  17:55:20,191 - #22 =
INFO  17:55:20,191 - #42 10
INFO  17:55:20,191 - #5 ;
INFO  17:55:20,191 - #41 int
INFO  17:55:20,191 - #41 x
INFO  17:55:20,191 - #10 ,
INFO  17:55:20,192 - #41 y
INFO  17:55:20,192 - #8 [
INFO  17:55:20,192 - #9 ]
INFO  17:55:20,192 - #10 ,
INFO  17:55:20,193 - #41 q
INFO  17:55:20,193 - #5 ;
INFO  17:55:20,193 - #3 {
INFO  17:55:20,194 - #41 double
INFO  17:55:20,194 - #41 k
INFO  17:55:20,194 - #6 (
INFO  17:55:20,195 - #41 int
INFO  17:55:20,195 - #41 arg1
INFO  17:55:20,195 - #10 ,
INFO  17:55:20,195 - #41 int
INFO  17:55:20,195 - #41 arg2
INFO  17:55:20,195 - #8 [
INFO  17:55:20,196 - #9 ]
INFO  17:55:20,196 - #7 )
INFO  17:55:20,196 - #41 double
INFO  17:55:20,196 - #41 c
INFO  17:55:20,196 - #5 ;
INFO  17:55:20,196 - #3 {
INFO  17:55:20,198 - #41 c
INFO  17:55:20,198 - #22 =
INFO  17:55:20,198 - #42 1
INFO  17:55:20,198 - #5 ;
INFO  17:55:20,198 - #12 return
INFO  17:55:20,199 - #41 c
INFO  17:55:20,199 - #13 +
INFO  17:55:20,200 - #42 2
INFO  17:55:20,202 - #5 ;
INFO  17:55:20,202 - #4 }
INFO  17:55:20,202 - #41 int
INFO  17:55:20,203 - #41 main
INFO  17:55:20,203 - #6 (
INFO  17:55:20,203 - #7 )
INFO  17:55:20,205 - #3 {
INFO  17:55:20,205 - #41 y
INFO  17:55:20,206 - #22 =
INFO  17:55:20,206 - #42 2
INFO  17:55:20,206 - #5 ;
INFO  17:55:20,206 - #39 if
INFO  17:55:20,206 - #6 (
INFO  17:55:20,206 - #41 x
INFO  17:55:20,206 - #27 <=
INFO  17:55:20,207 - #42 0
INFO  17:55:20,208 - #7 )
INFO  17:55:20,209 - #28 break
INFO  17:55:20,209 - #5 ;
INFO  17:55:20,210 - #39 if
INFO  17:55:20,211 - #6 (
INFO  17:55:20,211 - #42 0
INFO  17:55:20,211 - #27 <=
INFO  17:55:20,211 - #41 x
INFO  17:55:20,211 - #33 &&
INFO  17:55:20,211 - #41 sizes
INFO  17:55:20,212 - #20 ::
INFO  17:55:20,212 - #41 tableSize
INFO  17:55:20,212 - #24 >
INFO  17:55:20,212 - #41 x
INFO  17:55:20,214 - #7 )
INFO  17:55:20,214 - #3 {
INFO  17:55:20,214 - #11 print
INFO  17:55:20,214 - #6 (
INFO  17:55:20,214 - #41 x
INFO  17:55:20,215 - #7 )
INFO  17:55:20,215 - #5 ;
INFO  17:55:20,216 - #4 }
INFO  17:55:20,217 - #40 else
INFO  17:55:20,217 - #39 if
INFO  17:55:20,217 - #6 (
INFO  17:55:20,217 - #34 -
INFO  17:55:20,218 - #41 sizes
INFO  17:55:20,218 - #20 ::
INFO  17:55:20,218 - #41 tableSize
INFO  17:55:20,218 - #26 <
INFO  17:55:20,218 - #41 x
INFO  17:55:20,219 - #33 &&
INFO  17:55:20,220 - #41 x
INFO  17:55:20,220 - #26 <
INFO  17:55:20,220 - #42 0
INFO  17:55:20,220 - #7 )
INFO  17:55:20,220 - #3 {
INFO  17:55:20,220 - #41 read
INFO  17:55:20,220 - #6 (
INFO  17:55:20,220 - #41 x
INFO  17:55:20,220 - #7 )
INFO  17:55:20,221 - #5 ;
INFO  17:55:20,221 - #4 }
INFO  17:55:20,221 - #12 return
INFO  17:55:20,221 - #42 0
INFO  17:55:20,221 - #5 ;
INFO  17:55:20,222 - #4 }
INFO  17:55:20,222 - #4 }
