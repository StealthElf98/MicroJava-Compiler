INFO  18:04:13,366 - Compiling source file: C:\Users\Sergej\Desktop\pp2k23\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  18:04:13,446 - #2 program
INFO  18:04:13,447 - #41 MJProgram
INFO  18:04:13,447 - #17 namespace
INFO  18:04:13,448 - #41 sizes
INFO  18:04:13,448 - #3 {
INFO  18:04:13,448 - #18 const
INFO  18:04:13,449 - #41 int
INFO  18:04:13,449 - #41 tableSize
INFO  18:04:13,450 - #22 =
INFO  18:04:13,451 - #42 10
INFO  18:04:13,451 - #5 ;
INFO  18:04:13,452 - #3 {
INFO  18:04:13,454 - #15 void
INFO  18:04:13,456 - #41 setfactor
INFO  18:04:13,458 - #6 (
INFO  18:04:13,460 - #41 int
INFO  18:04:13,460 - #41 factor
INFO  18:04:13,460 - #7 )
INFO  18:04:13,461 - #3 {
INFO  18:04:13,465 - #41 this
INFO  18:04:13,466 - #21 .
INFO  18:04:13,467 - #41 factor
INFO  18:04:13,467 - #22 =
INFO  18:04:13,468 - #41 factor
INFO  18:04:13,469 - #5 ;
INFO  18:04:13,469 - #4 }
INFO  18:04:13,470 - #15 void
INFO  18:04:13,470 - #41 putp
INFO  18:04:13,471 - #6 (
INFO  18:04:13,471 - #41 int
INFO  18:04:13,471 - #41 a
INFO  18:04:13,471 - #10 ,
INFO  18:04:13,471 - #41 int
INFO  18:04:13,471 - #41 idx
INFO  18:04:13,471 - #7 )
INFO  18:04:13,472 - #3 {
INFO  18:04:13,472 - #41 this
INFO  18:04:13,472 - #21 .
INFO  18:04:13,473 - #41 pos
INFO  18:04:13,473 - #8 [
INFO  18:04:13,473 - #41 idx
INFO  18:04:13,474 - #9 ]
INFO  18:04:13,475 - #22 =
INFO  18:04:13,475 - #41 a
INFO  18:04:13,475 - #5 ;
INFO  18:04:13,475 - #4 }
INFO  18:04:13,476 - #4 }
INFO  18:04:13,476 - #4 }
INFO  18:04:13,476 - #18 const
INFO  18:04:13,477 - #41 int
INFO  18:04:13,477 - #41 z
INFO  18:04:13,477 - #22 =
INFO  18:04:13,477 - #42 4
INFO  18:04:13,477 - #10 ,
INFO  18:04:13,477 - #41 u
INFO  18:04:13,477 - #22 =
INFO  18:04:13,477 - #42 10
INFO  18:04:13,477 - #5 ;
INFO  18:04:13,478 - #41 int
INFO  18:04:13,478 - #41 x
INFO  18:04:13,478 - #10 ,
INFO  18:04:13,478 - #41 y
INFO  18:04:13,479 - #8 [
INFO  18:04:13,479 - #9 ]
INFO  18:04:13,479 - #10 ,
INFO  18:04:13,480 - #41 q
INFO  18:04:13,480 - #5 ;
INFO  18:04:13,480 - #3 {
INFO  18:04:13,482 - #41 double
INFO  18:04:13,482 - #41 k
INFO  18:04:13,483 - #6 (
INFO  18:04:13,483 - #41 int
INFO  18:04:13,483 - #41 arg1
INFO  18:04:13,483 - #10 ,
INFO  18:04:13,483 - #41 int
INFO  18:04:13,483 - #41 arg2
INFO  18:04:13,483 - #8 [
INFO  18:04:13,484 - #9 ]
INFO  18:04:13,484 - #7 )
INFO  18:04:13,484 - #41 double
INFO  18:04:13,484 - #41 c
INFO  18:04:13,484 - #5 ;
INFO  18:04:13,484 - #3 {
INFO  18:04:13,486 - #41 c
INFO  18:04:13,486 - #22 =
INFO  18:04:13,486 - #42 1
INFO  18:04:13,486 - #5 ;
INFO  18:04:13,486 - #12 return
INFO  18:04:13,487 - #41 c
INFO  18:04:13,487 - #13 +
INFO  18:04:13,487 - #42 2
INFO  18:04:13,489 - #5 ;
INFO  18:04:13,489 - #4 }
INFO  18:04:13,490 - #41 int
INFO  18:04:13,490 - #41 main
INFO  18:04:13,491 - #6 (
INFO  18:04:13,491 - #7 )
INFO  18:04:13,492 - #3 {
INFO  18:04:13,493 - #41 y
INFO  18:04:13,493 - #22 =
INFO  18:04:13,493 - #42 2
INFO  18:04:13,493 - #5 ;
INFO  18:04:13,493 - #39 if
INFO  18:04:13,493 - #6 (
INFO  18:04:13,493 - #41 x
INFO  18:04:13,494 - #27 <=
INFO  18:04:13,494 - #42 0
INFO  18:04:13,495 - #7 )
INFO  18:04:13,496 - #28 break
INFO  18:04:13,496 - #5 ;
INFO  18:04:13,496 - #39 if
INFO  18:04:13,498 - #6 (
INFO  18:04:13,498 - #42 0
INFO  18:04:13,498 - #27 <=
INFO  18:04:13,498 - #41 x
INFO  18:04:13,498 - #33 &&
INFO  18:04:13,498 - #41 sizes
INFO  18:04:13,499 - #20 ::
INFO  18:04:13,499 - #41 tableSize
INFO  18:04:13,499 - #24 >
INFO  18:04:13,499 - #41 x
INFO  18:04:13,500 - #7 )
INFO  18:04:13,501 - #3 {
INFO  18:04:13,501 - #11 print
INFO  18:04:13,501 - #6 (
INFO  18:04:13,501 - #41 x
INFO  18:04:13,502 - #7 )
INFO  18:04:13,502 - #5 ;
INFO  18:04:13,502 - #4 }
INFO  18:04:13,502 - #40 else
INFO  18:04:13,502 - #39 if
INFO  18:04:13,502 - #6 (
INFO  18:04:13,503 - #34 -
INFO  18:04:13,503 - #41 sizes
INFO  18:04:13,503 - #20 ::
INFO  18:04:13,503 - #41 tableSize
INFO  18:04:13,503 - #26 <
INFO  18:04:13,503 - #41 x
INFO  18:04:13,504 - #33 &&
INFO  18:04:13,504 - #41 x
INFO  18:04:13,505 - #26 <
INFO  18:04:13,505 - #42 0
INFO  18:04:13,505 - #7 )
INFO  18:04:13,505 - #3 {
INFO  18:04:13,505 - #41 read
INFO  18:04:13,505 - #6 (
INFO  18:04:13,505 - #41 x
INFO  18:04:13,505 - #7 )
INFO  18:04:13,506 - #5 ;
INFO  18:04:13,507 - #4 }
INFO  18:04:13,507 - #12 return
INFO  18:04:13,508 - #42 0
INFO  18:04:13,508 - #5 ;
INFO  18:04:13,508 - #4 }
INFO  18:04:13,508 - #4 }
