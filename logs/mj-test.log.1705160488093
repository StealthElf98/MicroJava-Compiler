INFO  16:37:59,285 - Compiling source file: C:\Users\Sergej\Desktop\pp2k23\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  16:37:59,354 - #2 program
INFO  16:37:59,354 - #41 MJProgram
INFO  16:37:59,354 - #17 namespace
INFO  16:37:59,357 - #41 sizes
INFO  16:37:59,358 - #3 {
INFO  16:37:59,360 - #18 const
INFO  16:37:59,363 - #41 int
INFO  16:37:59,363 - #41 tableSize
INFO  16:37:59,366 - #22 =
INFO  16:37:59,367 - #42 10
INFO  16:37:59,367 - #5 ;
INFO  16:37:59,368 - #41 char
INFO  16:37:59,371 - #41 g
INFO  16:37:59,372 - #5 ;
INFO  16:37:59,374 - #41 bool
INFO  16:37:59,381 - #41 b
INFO  16:37:59,381 - #5 ;
INFO  16:37:59,382 - #3 {
INFO  16:37:59,383 - #15 void
INFO  16:37:59,385 - #41 setfactor
INFO  16:37:59,387 - #6 (
INFO  16:37:59,387 - #41 int
INFO  16:37:59,387 - #41 factor
INFO  16:37:59,387 - #7 )
INFO  16:37:59,388 - #3 {
INFO  16:37:59,389 - #41 factor
INFO  16:37:59,389 - #22 =
INFO  16:37:59,390 - #41 factor
INFO  16:37:59,391 - #36 *
INFO  16:37:59,392 - #41 factor
INFO  16:37:59,394 - #5 ;
INFO  16:37:59,394 - #4 }
INFO  16:37:59,395 - #15 void
INFO  16:37:59,396 - #41 putp
INFO  16:37:59,396 - #6 (
INFO  16:37:59,396 - #41 int
INFO  16:37:59,396 - #41 a
INFO  16:37:59,396 - #10 ,
INFO  16:37:59,396 - #41 int
INFO  16:37:59,397 - #41 idx
INFO  16:37:59,397 - #7 )
INFO  16:37:59,398 - #3 {
INFO  16:37:59,398 - #41 a
INFO  16:37:59,398 - #22 =
INFO  16:37:59,400 - #41 a
INFO  16:37:59,401 - #13 +
INFO  16:37:59,401 - #41 x
INFO  16:37:59,402 - #5 ;
INFO  16:37:59,403 - #4 }
INFO  16:37:59,403 - #4 }
INFO  16:37:59,403 - #4 }
INFO  16:37:59,403 - #18 const
INFO  16:37:59,404 - #41 int
INFO  16:37:59,404 - #41 z
INFO  16:37:59,404 - #22 =
INFO  16:37:59,404 - #42 4
INFO  16:37:59,405 - #10 ,
INFO  16:37:59,405 - #41 u
INFO  16:37:59,405 - #22 =
INFO  16:37:59,405 - #42 10
INFO  16:37:59,405 - #5 ;
INFO  16:37:59,406 - #41 int
INFO  16:37:59,407 - #41 x
INFO  16:37:59,408 - #10 ,
INFO  16:37:59,408 - #41 y
INFO  16:37:59,410 - #8 [
INFO  16:37:59,410 - #9 ]
INFO  16:37:59,410 - #10 ,
INFO  16:37:59,411 - #41 q
INFO  16:37:59,411 - #5 ;
INFO  16:37:59,411 - #3 {
INFO  16:37:59,411 - #41 double
INFO  16:37:59,411 - #41 k
INFO  16:37:59,411 - #6 (
INFO  16:37:59,411 - #41 int
INFO  16:37:59,411 - #41 arg1
INFO  16:37:59,411 - #10 ,
INFO  16:37:59,412 - #41 int
INFO  16:37:59,412 - #41 arg2
INFO  16:37:59,412 - #8 [
INFO  16:37:59,412 - #9 ]
INFO  16:37:59,412 - #7 )
INFO  16:37:59,412 - #41 int
INFO  16:37:59,412 - #41 c
INFO  16:37:59,412 - #5 ;
INFO  16:37:59,413 - #3 {
INFO  16:37:59,414 - #41 c
INFO  16:37:59,414 - #22 =
INFO  16:37:59,414 - #42 1
INFO  16:37:59,414 - #5 ;
INFO  16:37:59,415 - #12 return
INFO  16:37:59,415 - #41 c
INFO  16:37:59,415 - #13 +
INFO  16:37:59,415 - #42 2
INFO  16:37:59,415 - #5 ;
INFO  16:37:59,416 - #4 }
INFO  16:37:59,416 - #15 void
INFO  16:37:59,417 - #41 main
INFO  16:37:59,417 - #6 (
INFO  16:37:59,418 - #7 )
INFO  16:37:59,420 - #3 {
INFO  16:37:59,421 - #41 y
INFO  16:37:59,421 - #22 =
INFO  16:37:59,422 - #42 2
INFO  16:37:59,423 - #5 ;
INFO  16:37:59,423 - #41 b
INFO  16:37:59,424 - #22 =
INFO  16:37:59,425 - #43 true
INFO  16:37:59,425 - #5 ;
