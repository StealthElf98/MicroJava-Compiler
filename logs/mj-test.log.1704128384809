INFO  17:58:43,968 - Compiling source file: C:\Users\Sergej\Desktop\pp2k23\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  17:58:44,050 - #2 program
INFO  17:58:44,050 - #41 MJProgram
INFO  17:58:44,051 - #17 namespace
INFO  17:58:44,052 - #41 sizes
INFO  17:58:44,052 - #3 {
INFO  17:58:44,052 - #18 const
INFO  17:58:44,053 - #41 int
INFO  17:58:44,054 - #41 tableSize
INFO  17:58:44,054 - #22 =
INFO  17:58:44,055 - #42 10
INFO  17:58:44,055 - #5 ;
INFO  17:58:44,057 - #3 {
INFO  17:58:44,063 - #15 void
INFO  17:58:44,064 - #41 setfactor
INFO  17:58:44,066 - #6 (
INFO  17:58:44,067 - #41 int
INFO  17:58:44,068 - #41 factor
INFO  17:58:44,069 - #7 )
INFO  17:58:44,070 - #3 {
INFO  17:58:44,071 - #41 this
INFO  17:58:44,073 - #21 .
INFO  17:58:44,074 - #41 factor
INFO  17:58:44,074 - #22 =
INFO  17:58:44,074 - #41 factor
INFO  17:58:44,075 - #5 ;
INFO  17:58:44,076 - #4 }
INFO  17:58:44,076 - #15 void
INFO  17:58:44,077 - #41 putp
INFO  17:58:44,077 - #6 (
INFO  17:58:44,077 - #41 int
INFO  17:58:44,077 - #41 a
INFO  17:58:44,077 - #10 ,
INFO  17:58:44,077 - #41 int
INFO  17:58:44,077 - #41 idx
INFO  17:58:44,077 - #7 )
INFO  17:58:44,077 - #3 {
INFO  17:58:44,077 - #41 this
INFO  17:58:44,078 - #21 .
INFO  17:58:44,078 - #41 pos
INFO  17:58:44,078 - #8 [
INFO  17:58:44,078 - #41 idx
INFO  17:58:44,078 - #9 ]
INFO  17:58:44,078 - #22 =
INFO  17:58:44,078 - #41 a
INFO  17:58:44,079 - #5 ;
INFO  17:58:44,079 - #4 }
INFO  17:58:44,079 - #4 }
INFO  17:58:44,079 - #4 }
INFO  17:58:44,079 - #18 const
INFO  17:58:44,080 - #41 int
INFO  17:58:44,080 - #41 z
INFO  17:58:44,080 - #22 =
INFO  17:58:44,080 - #42 4
INFO  17:58:44,080 - #10 ,
INFO  17:58:44,080 - #41 u
INFO  17:58:44,080 - #22 =
INFO  17:58:44,080 - #42 10
INFO  17:58:44,081 - #5 ;
INFO  17:58:44,081 - #41 int
INFO  17:58:44,081 - #41 x
INFO  17:58:44,081 - #10 ,
INFO  17:58:44,081 - #41 y
INFO  17:58:44,082 - #8 [
INFO  17:58:44,082 - #9 ]
INFO  17:58:44,082 - #10 ,
INFO  17:58:44,083 - #41 q
INFO  17:58:44,083 - #5 ;
INFO  17:58:44,083 - #3 {
INFO  17:58:44,086 - #41 double
INFO  17:58:44,087 - #41 k
INFO  17:58:44,087 - #6 (
INFO  17:58:44,087 - #41 int
INFO  17:58:44,088 - #41 arg1
INFO  17:58:44,088 - #10 ,
INFO  17:58:44,088 - #41 int
INFO  17:58:44,088 - #41 arg2
INFO  17:58:44,088 - #8 [
INFO  17:58:44,088 - #9 ]
INFO  17:58:44,088 - #7 )
INFO  17:58:44,088 - #41 double
INFO  17:58:44,089 - #41 c
INFO  17:58:44,089 - #5 ;
INFO  17:58:44,089 - #3 {
INFO  17:58:44,090 - #41 c
INFO  17:58:44,090 - #22 =
INFO  17:58:44,091 - #42 1
INFO  17:58:44,091 - #5 ;
INFO  17:58:44,091 - #12 return
INFO  17:58:44,091 - #41 c
INFO  17:58:44,091 - #13 +
INFO  17:58:44,091 - #42 2
INFO  17:58:44,093 - #5 ;
INFO  17:58:44,093 - #4 }
INFO  17:58:44,093 - #41 int
INFO  17:58:44,093 - #41 main
INFO  17:58:44,094 - #6 (
INFO  17:58:44,094 - #7 )
INFO  17:58:44,095 - #3 {
INFO  17:58:44,095 - #41 y
INFO  17:58:44,095 - #22 =
INFO  17:58:44,095 - #42 2
INFO  17:58:44,096 - #5 ;
INFO  17:58:44,096 - #39 if
INFO  17:58:44,096 - #6 (
INFO  17:58:44,096 - #41 x
INFO  17:58:44,096 - #27 <=
INFO  17:58:44,096 - #42 0
INFO  17:58:44,098 - #7 )
INFO  17:58:44,098 - #28 break
INFO  17:58:44,099 - #5 ;
INFO  17:58:44,099 - #39 if
INFO  17:58:44,100 - #6 (
INFO  17:58:44,100 - #42 0
INFO  17:58:44,100 - #27 <=
INFO  17:58:44,102 - #41 x
INFO  17:58:44,102 - #33 &&
INFO  17:58:44,103 - #41 sizes
INFO  17:58:44,103 - #20 ::
INFO  17:58:44,103 - #41 tableSize
INFO  17:58:44,104 - #24 >
INFO  17:58:44,104 - #41 x
INFO  17:58:44,105 - #7 )
INFO  17:58:44,105 - #3 {
INFO  17:58:44,105 - #11 print
INFO  17:58:44,105 - #6 (
INFO  17:58:44,106 - #41 x
INFO  17:58:44,106 - #7 )
INFO  17:58:44,106 - #5 ;
INFO  17:58:44,106 - #4 }
INFO  17:58:44,107 - #40 else
INFO  17:58:44,107 - #39 if
INFO  17:58:44,107 - #6 (
INFO  17:58:44,107 - #34 -
INFO  17:58:44,107 - #41 sizes
INFO  17:58:44,107 - #20 ::
INFO  17:58:44,107 - #41 tableSize
INFO  17:58:44,108 - #26 <
INFO  17:58:44,108 - #41 x
INFO  17:58:44,109 - #33 &&
INFO  17:58:44,109 - #41 x
INFO  17:58:44,109 - #26 <
INFO  17:58:44,109 - #42 0
INFO  17:58:44,109 - #7 )
INFO  17:58:44,110 - #3 {
INFO  17:58:44,110 - #41 read
INFO  17:58:44,110 - #6 (
INFO  17:58:44,110 - #41 x
INFO  17:58:44,110 - #7 )
INFO  17:58:44,111 - #5 ;
INFO  17:58:44,111 - #4 }
INFO  17:58:44,111 - #12 return
INFO  17:58:44,111 - #42 0
INFO  17:58:44,111 - #5 ;
INFO  17:58:44,111 - #4 }
INFO  17:58:44,111 - #4 }
