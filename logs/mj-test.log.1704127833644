INFO  16:06:28,350 - Compiling source file: C:\Users\Sergej\Desktop\pp2k23\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  16:06:28,430 - #2 program
INFO  16:06:28,430 - #41 MJProgram
INFO  16:06:28,430 - #17 namespace
INFO  16:06:28,431 - #41 sizes
INFO  16:06:28,432 - #3 {
INFO  16:06:28,432 - #18 const
INFO  16:06:28,433 - #41 int
INFO  16:06:28,433 - #41 tableSize
INFO  16:06:28,434 - #22 =
INFO  16:06:28,435 - #42 10
INFO  16:06:28,436 - #5 ;
INFO  16:06:28,437 - #3 {
INFO  16:06:28,442 - #4 }
INFO  16:06:28,444 - #4 }
INFO  16:06:28,445 - #18 const
INFO  16:06:28,447 - #41 int
INFO  16:06:28,448 - #41 z
INFO  16:06:28,448 - #22 =
INFO  16:06:28,449 - #42 4
INFO  16:06:28,449 - #10 ,
INFO  16:06:28,452 - #41 u
INFO  16:06:28,452 - #22 =
INFO  16:06:28,452 - #42 10
INFO  16:06:28,452 - #5 ;
INFO  16:06:28,453 - #41 int
INFO  16:06:28,453 - #41 x
INFO  16:06:28,453 - #10 ,
INFO  16:06:28,454 - #41 y
INFO  16:06:28,454 - #8 [
INFO  16:06:28,454 - #9 ]
INFO  16:06:28,454 - #10 ,
INFO  16:06:28,454 - #41 q
INFO  16:06:28,455 - #5 ;
INFO  16:06:28,455 - #3 {
INFO  16:06:28,457 - #41 double
INFO  16:06:28,457 - #41 k
INFO  16:06:28,457 - #6 (
INFO  16:06:28,459 - #41 int
INFO  16:06:28,460 - #41 arg1
INFO  16:06:28,460 - #10 ,
INFO  16:06:28,461 - #41 int
INFO  16:06:28,461 - #41 arg2
INFO  16:06:28,462 - #8 [
INFO  16:06:28,462 - #9 ]
INFO  16:06:28,462 - #7 )
INFO  16:06:28,464 - #41 double
INFO  16:06:28,466 - #41 c
INFO  16:06:28,466 - #5 ;
INFO  16:06:28,467 - #3 {
INFO  16:06:28,468 - #41 c
INFO  16:06:28,470 - #22 =
INFO  16:06:28,471 - #42 1
INFO  16:06:28,473 - #5 ;
INFO  16:06:28,474 - #12 return
INFO  16:06:28,475 - #41 c
INFO  16:06:28,475 - #13 +
INFO  16:06:28,475 - #42 2
INFO  16:06:28,477 - #5 ;
INFO  16:06:28,477 - #4 }
INFO  16:06:28,478 - #41 int
INFO  16:06:28,478 - #41 main
INFO  16:06:28,478 - #6 (
INFO  16:06:28,478 - #7 )
INFO  16:06:28,480 - #3 {
INFO  16:06:28,480 - #41 y
INFO  16:06:28,481 - #22 =
INFO  16:06:28,481 - #42 2
INFO  16:06:28,481 - #5 ;
INFO  16:06:28,481 - #39 if
INFO  16:06:28,481 - #6 (
INFO  16:06:28,481 - #41 x
INFO  16:06:28,481 - #27 <=
INFO  16:06:28,481 - #42 0
INFO  16:06:28,482 - #7 )
INFO  16:06:28,483 - #28 break
INFO  16:06:28,483 - #5 ;
INFO  16:06:28,483 - #39 if
INFO  16:06:28,484 - #6 (
INFO  16:06:28,484 - #42 0
INFO  16:06:28,485 - #27 <=
INFO  16:06:28,485 - #41 x
INFO  16:06:28,485 - #33 &&
INFO  16:06:28,485 - #41 sizes
INFO  16:06:28,485 - #20 ::
INFO  16:06:28,485 - #41 tableSize
INFO  16:06:28,485 - #24 >
INFO  16:06:28,485 - #41 x
INFO  16:06:28,486 - #7 )
INFO  16:06:28,486 - #3 {
INFO  16:06:28,486 - #11 print
INFO  16:06:28,486 - #6 (
INFO  16:06:28,486 - #41 x
INFO  16:06:28,487 - #7 )
INFO  16:06:28,487 - #5 ;
INFO  16:06:28,487 - #4 }
INFO  16:06:28,487 - #40 else
INFO  16:06:28,487 - #39 if
INFO  16:06:28,487 - #6 (
INFO  16:06:28,487 - #34 -
INFO  16:06:28,487 - #41 sizes
INFO  16:06:28,488 - #20 ::
INFO  16:06:28,488 - #41 tableSize
INFO  16:06:28,488 - #26 <
INFO  16:06:28,488 - #41 x
INFO  16:06:28,489 - #33 &&
INFO  16:06:28,489 - #41 x
INFO  16:06:28,489 - #26 <
INFO  16:06:28,489 - #41 k
INFO  16:06:28,489 - #6 (
INFO  16:06:28,489 - #41 x
INFO  16:06:28,490 - #7 )
INFO  16:06:28,490 - #7 )
INFO  16:06:28,490 - #3 {
INFO  16:06:28,490 - #41 read
INFO  16:06:28,491 - #6 (
INFO  16:06:28,491 - #41 x
INFO  16:06:28,491 - #7 )
INFO  16:06:28,491 - #5 ;
INFO  16:06:28,492 - #4 }
INFO  16:06:28,492 - #12 return
INFO  16:06:28,492 - #42 0
INFO  16:06:28,492 - #5 ;
INFO  16:06:28,492 - #4 }
INFO  16:06:28,492 - #4 }
