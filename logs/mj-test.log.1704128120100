INFO  17:51:21,017 - Compiling source file: C:\Users\Sergej\Desktop\pp2k23\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  17:51:21,078 - #2 program
INFO  17:51:21,078 - #41 MJProgram
INFO  17:51:21,078 - #17 namespace
INFO  17:51:21,079 - #41 sizes
INFO  17:51:21,079 - #3 {
INFO  17:51:21,079 - #18 const
INFO  17:51:21,080 - #41 int
INFO  17:51:21,081 - #41 tableSize
INFO  17:51:21,082 - #22 =
INFO  17:51:21,082 - #42 10
INFO  17:51:21,082 - #5 ;
INFO  17:51:21,084 - #3 {
INFO  17:51:21,089 - #15 void
INFO  17:51:21,090 - #41 setfactor
INFO  17:51:21,091 - #6 (
INFO  17:51:21,092 - #41 int
INFO  17:51:21,092 - #41 factor
INFO  17:51:21,093 - #7 )
INFO  17:51:21,094 - #3 {
INFO  17:51:21,095 - #41 this
INFO  17:51:21,097 - #21 .
INFO  17:51:21,098 - #41 factor
INFO  17:51:21,098 - #22 =
INFO  17:51:21,098 - #41 factor
INFO  17:51:21,099 - #5 ;
INFO  17:51:21,100 - #4 }
INFO  17:51:21,100 - #4 }
INFO  17:51:21,101 - #4 }
INFO  17:51:21,101 - #18 const
INFO  17:51:21,101 - #41 int
INFO  17:51:21,101 - #41 z
INFO  17:51:21,101 - #22 =
INFO  17:51:21,102 - #42 4
INFO  17:51:21,102 - #10 ,
INFO  17:51:21,102 - #41 u
INFO  17:51:21,102 - #22 =
INFO  17:51:21,102 - #42 10
INFO  17:51:21,102 - #5 ;
INFO  17:51:21,103 - #41 int
INFO  17:51:21,103 - #41 x
INFO  17:51:21,103 - #10 ,
INFO  17:51:21,103 - #41 y
INFO  17:51:21,104 - #8 [
INFO  17:51:21,104 - #9 ]
INFO  17:51:21,105 - #10 ,
INFO  17:51:21,105 - #41 q
INFO  17:51:21,105 - #5 ;
INFO  17:51:21,106 - #3 {
INFO  17:51:21,108 - #41 double
INFO  17:51:21,108 - #41 k
INFO  17:51:21,108 - #6 (
INFO  17:51:21,108 - #41 int
INFO  17:51:21,108 - #41 arg1
INFO  17:51:21,108 - #10 ,
INFO  17:51:21,108 - #41 int
INFO  17:51:21,109 - #41 arg2
INFO  17:51:21,109 - #8 [
INFO  17:51:21,109 - #9 ]
INFO  17:51:21,109 - #7 )
INFO  17:51:21,110 - #41 double
INFO  17:51:21,110 - #41 c
INFO  17:51:21,110 - #5 ;
INFO  17:51:21,111 - #3 {
INFO  17:51:21,112 - #41 c
INFO  17:51:21,113 - #22 =
INFO  17:51:21,113 - #42 1
INFO  17:51:21,113 - #5 ;
INFO  17:51:21,113 - #12 return
INFO  17:51:21,113 - #41 c
INFO  17:51:21,114 - #13 +
INFO  17:51:21,114 - #42 2
INFO  17:51:21,115 - #5 ;
INFO  17:51:21,115 - #4 }
INFO  17:51:21,115 - #41 int
INFO  17:51:21,115 - #41 main
INFO  17:51:21,115 - #6 (
INFO  17:51:21,116 - #7 )
INFO  17:51:21,116 - #3 {
INFO  17:51:21,117 - #41 y
INFO  17:51:21,117 - #22 =
INFO  17:51:21,117 - #42 2
INFO  17:51:21,117 - #5 ;
INFO  17:51:21,117 - #39 if
INFO  17:51:21,117 - #6 (
INFO  17:51:21,117 - #41 x
INFO  17:51:21,117 - #27 <=
INFO  17:51:21,117 - #42 0
INFO  17:51:21,119 - #7 )
INFO  17:51:21,119 - #28 break
INFO  17:51:21,120 - #5 ;
INFO  17:51:21,120 - #39 if
INFO  17:51:21,121 - #6 (
INFO  17:51:21,121 - #42 0
INFO  17:51:21,121 - #27 <=
INFO  17:51:21,121 - #41 x
INFO  17:51:21,121 - #33 &&
INFO  17:51:21,121 - #41 sizes
INFO  17:51:21,122 - #20 ::
INFO  17:51:21,122 - #41 tableSize
INFO  17:51:21,122 - #24 >
INFO  17:51:21,122 - #41 x
INFO  17:51:21,123 - #7 )
INFO  17:51:21,123 - #3 {
INFO  17:51:21,123 - #11 print
INFO  17:51:21,123 - #6 (
INFO  17:51:21,123 - #41 x
INFO  17:51:21,124 - #7 )
INFO  17:51:21,124 - #5 ;
INFO  17:51:21,124 - #4 }
INFO  17:51:21,124 - #40 else
INFO  17:51:21,124 - #39 if
INFO  17:51:21,124 - #6 (
INFO  17:51:21,124 - #34 -
INFO  17:51:21,124 - #41 sizes
INFO  17:51:21,125 - #20 ::
INFO  17:51:21,125 - #41 tableSize
INFO  17:51:21,125 - #26 <
INFO  17:51:21,125 - #41 x
INFO  17:51:21,126 - #33 &&
INFO  17:51:21,127 - #41 x
INFO  17:51:21,127 - #26 <
INFO  17:51:21,127 - #42 0
INFO  17:51:21,127 - #7 )
INFO  17:51:21,127 - #3 {
INFO  17:51:21,127 - #41 read
INFO  17:51:21,127 - #6 (
INFO  17:51:21,128 - #41 x
INFO  17:51:21,128 - #7 )
INFO  17:51:21,128 - #5 ;
INFO  17:51:21,129 - #4 }
INFO  17:51:21,129 - #12 return
INFO  17:51:21,129 - #42 0
INFO  17:51:21,129 - #5 ;
INFO  17:51:21,129 - #4 }
INFO  17:51:21,130 - #4 }
