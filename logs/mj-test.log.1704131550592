INFO  18:43:41,624 - Compiling source file: C:\Users\Sergej\Desktop\pp2k23\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  18:43:41,705 - #2 program
INFO  18:43:41,705 - #41 MJProgram
INFO  18:43:41,705 - #17 namespace
INFO  18:43:41,706 - #41 sizes
INFO  18:43:41,707 - #3 {
INFO  18:43:41,707 - #18 const
INFO  18:43:41,708 - #41 int
INFO  18:43:41,708 - #41 tableSize
INFO  18:43:41,709 - #22 =
INFO  18:43:41,710 - #42 10
INFO  18:43:41,711 - #5 ;
INFO  18:43:41,714 - #3 {
INFO  18:43:41,721 - #15 void
INFO  18:43:41,724 - #41 setfactor
INFO  18:43:41,725 - #6 (
INFO  18:43:41,729 - #41 int
INFO  18:43:41,729 - #41 factor
INFO  18:43:41,729 - #7 )
INFO  18:43:41,730 - #3 {
INFO  18:43:41,731 - #41 this
INFO  18:43:41,732 - #21 .
INFO  18:43:41,733 - #41 factor
INFO  18:43:41,733 - #22 =
INFO  18:43:41,733 - #41 factor
INFO  18:43:41,734 - #5 ;
INFO  18:43:41,735 - #4 }
INFO  18:43:41,736 - #15 void
INFO  18:43:41,736 - #41 putp
INFO  18:43:41,736 - #6 (
INFO  18:43:41,736 - #41 int
INFO  18:43:41,737 - #41 a
INFO  18:43:41,737 - #10 ,
INFO  18:43:41,737 - #41 int
INFO  18:43:41,737 - #41 idx
INFO  18:43:41,737 - #7 )
INFO  18:43:41,737 - #3 {
INFO  18:43:41,737 - #41 this
INFO  18:43:41,738 - #21 .
INFO  18:43:41,738 - #41 pos
INFO  18:43:41,738 - #8 [
INFO  18:43:41,738 - #41 idx
INFO  18:43:41,738 - #9 ]
INFO  18:43:41,738 - #22 =
INFO  18:43:41,738 - #41 a
INFO  18:43:41,739 - #5 ;
INFO  18:43:41,739 - #4 }
INFO  18:43:41,739 - #4 }
INFO  18:43:41,739 - #4 }
INFO  18:43:41,739 - #18 const
INFO  18:43:41,739 - #41 int
INFO  18:43:41,740 - #41 z
INFO  18:43:41,740 - #22 =
INFO  18:43:41,740 - #42 4
INFO  18:43:41,740 - #10 ,
INFO  18:43:41,740 - #41 u
INFO  18:43:41,741 - #22 =
INFO  18:43:41,741 - #42 10
INFO  18:43:41,741 - #5 ;
INFO  18:43:41,741 - #41 int
INFO  18:43:41,741 - #41 x
INFO  18:43:41,742 - #10 ,
INFO  18:43:41,742 - #41 y
INFO  18:43:41,743 - #8 [
INFO  18:43:41,746 - #9 ]
INFO  18:43:41,746 - #10 ,
INFO  18:43:41,746 - #41 q
INFO  18:43:41,747 - #5 ;
INFO  18:43:41,747 - #3 {
INFO  18:43:41,749 - #41 double
INFO  18:43:41,749 - #41 k
INFO  18:43:41,749 - #6 (
INFO  18:43:41,749 - #41 int
INFO  18:43:41,749 - #41 arg1
INFO  18:43:41,749 - #10 ,
INFO  18:43:41,749 - #41 int
INFO  18:43:41,749 - #41 arg2
INFO  18:43:41,750 - #8 [
INFO  18:43:41,750 - #9 ]
INFO  18:43:41,750 - #7 )
INFO  18:43:41,750 - #41 double
INFO  18:43:41,750 - #41 c
INFO  18:43:41,750 - #5 ;
INFO  18:43:41,751 - #3 {
INFO  18:43:41,752 - #41 c
INFO  18:43:41,752 - #22 =
INFO  18:43:41,752 - #42 1
INFO  18:43:41,752 - #5 ;
INFO  18:43:41,753 - #12 return
INFO  18:43:41,753 - #41 c
INFO  18:43:41,753 - #13 +
INFO  18:43:41,753 - #42 2
INFO  18:43:41,754 - #5 ;
INFO  18:43:41,755 - #4 }
INFO  18:43:41,755 - #41 int
INFO  18:43:41,755 - #41 main
INFO  18:43:41,755 - #6 (
INFO  18:43:41,755 - #7 )
INFO  18:43:41,756 - #3 {
INFO  18:43:41,757 - #41 y
INFO  18:43:41,757 - #22 =
INFO  18:43:41,757 - #42 2
INFO  18:43:41,757 - #5 ;
INFO  18:43:41,757 - #39 if
INFO  18:43:41,758 - #6 (
INFO  18:43:41,758 - #41 x
INFO  18:43:41,758 - #27 <=
INFO  18:43:41,758 - #42 0
INFO  18:43:41,762 - #7 )
INFO  18:43:41,763 - #28 break
INFO  18:43:41,763 - #5 ;
INFO  18:43:41,763 - #39 if
INFO  18:43:41,764 - #6 (
INFO  18:43:41,764 - #42 0
INFO  18:43:41,764 - #27 <=
INFO  18:43:41,765 - #41 x
INFO  18:43:41,765 - #33 &&
INFO  18:43:41,765 - #41 sizes
INFO  18:43:41,765 - #20 ::
INFO  18:43:41,765 - #41 tableSize
INFO  18:43:41,765 - #24 >
INFO  18:43:41,765 - #41 x
INFO  18:43:41,766 - #7 )
INFO  18:43:41,766 - #3 {
INFO  18:43:41,767 - #11 print
INFO  18:43:41,767 - #6 (
INFO  18:43:41,767 - #41 x
INFO  18:43:41,767 - #7 )
INFO  18:43:41,767 - #5 ;
INFO  18:43:41,767 - #4 }
INFO  18:43:41,768 - #40 else
INFO  18:43:41,768 - #39 if
INFO  18:43:41,768 - #6 (
INFO  18:43:41,768 - #34 -
INFO  18:43:41,768 - #41 sizes
INFO  18:43:41,768 - #20 ::
INFO  18:43:41,768 - #41 tableSize
INFO  18:43:41,769 - #26 <
INFO  18:43:41,769 - #41 x
INFO  18:43:41,770 - #33 &&
INFO  18:43:41,770 - #41 x
INFO  18:43:41,771 - #26 <
INFO  18:43:41,771 - #42 0
INFO  18:43:41,771 - #7 )
INFO  18:43:41,771 - #3 {
INFO  18:43:41,771 - #41 read
INFO  18:43:41,771 - #6 (
INFO  18:43:41,771 - #41 x
INFO  18:43:41,771 - #7 )
INFO  18:43:41,772 - #5 ;
INFO  18:43:41,772 - #4 }
INFO  18:43:41,773 - #12 return
INFO  18:43:41,773 - #42 0
INFO  18:43:41,773 - #5 ;
INFO  18:43:41,773 - #4 }
INFO  18:43:41,773 - #4 }
